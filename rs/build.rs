use std::fs::{File};
use std::io::Write;
use std::path::Path;
use glob::glob;

fn main() {
    let out_dir = "src";
    let dest_path = Path::new(&out_dir).join("subcmds.rs");
    let mut file = File::create(&dest_path).unwrap();
    writeln!(file, r###"// Code generated by build.rs; DO NOT EDIT.
"###).unwrap();
    let subcommand_files_pattern = Path::new("src/subcmd_*.rs");
    for entry in glob(&subcommand_files_pattern.to_string_lossy()).unwrap() {
        let entry = entry.unwrap();
        let path = entry.as_path();
        if path.is_file() {
            if let Some(file_stem) = path.file_stem() {
                let module_name = file_stem.to_string_lossy();
                writeln!(file, "mod {module};", module = module_name).unwrap();
            }
        }
    }
}
